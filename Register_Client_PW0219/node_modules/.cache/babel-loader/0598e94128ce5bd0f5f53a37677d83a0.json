{"ast":null,"code":"var _jsxFileName = \"/home/apleitez/Documents/WEB/labofinal/Register_Client_PW0219/src/components/App.js\";\nimport React from \"react\";\nimport RegisterForm from './RegisterForm';\nimport RegisterTable from './RegisterTable';\nimport API from '../utils/ApiURLBase';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      student_list: [],\n      id_counter: 0\n    };\n  }\n\n  componentDidMount() {\n    let options = {\n      headers: {\n        Accept: 'application/json'\n      }\n    };\n    fetch(\"\".concat(API.baseURL, \"/register/create\"), options).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      let butter_list = this.state.student_list.slice();\n      this.setState({\n        student_list: butter_list.concat([data.student])\n      });\n    }).catch(err => console.log(\"Ocurrio un error en la conexion\"));\n  }\n\n  handleSubmit(student) {\n    student.datetime = new Date();\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(student)\n    };\n  }\n\n  handleDelete(student) {\n    let index = this.state.student_list.find(value => {\n      return value._id === student._id;\n    });\n    let buffer_list = this.state.student_list.slice();\n    buffer_list.splice(index, 1);\n    this.setState({\n      student_list: buffer_list\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        \"marginTop\": 2 + \"em\",\n        \"marginBottom\": 2 + \"em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(RegisterForm, {\n      onSubmit: student => {\n        this.handleSubmit(student);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(RegisterTable, {\n      list: this.state.student_list,\n      onDelete: student => this.handleDelete(student),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/apleitez/Documents/WEB/labofinal/Register_Client_PW0219/src/components/App.js"],"names":["React","RegisterForm","RegisterTable","API","App","Component","constructor","props","state","student_list","id_counter","componentDidMount","options","headers","Accept","fetch","baseURL","then","res","json","data","console","log","butter_list","slice","setState","concat","student","catch","err","handleSubmit","datetime","Date","method","body","JSON","stringify","handleDelete","index","find","value","_id","buffer_list","splice","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAC,EADJ;AAETC,MAAAA,UAAU,EAAC;AAFF,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GACjB;AACI,QAAIC,OAAO,GAAG;AAEVC,MAAAA,OAAO,EAAG;AACNC,QAAAA,MAAM,EAAG;AADH;AAFA,KAAd;AAOAC,IAAAA,KAAK,WAAIZ,GAAG,CAACa,OAAR,uBAAkCJ,OAAlC,CAAL,CACCK,IADD,CACMC,GAAG,IAAG;AAAC,aAAOA,GAAG,CAACC,IAAJ,EAAP;AAAkB,KAD/B,EAECF,IAFD,CAEMG,IAAI,IAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAIG,WAAW,GAAG,KAAKf,KAAL,CAAWC,YAAX,CAAwBe,KAAxB,EAAlB;AAEA,WAAKC,QAAL,CAAc;AACVhB,QAAAA,YAAY,EAAKc,WAAW,CAACG,MAAZ,CAAmB,CAACN,IAAI,CAACO,OAAN,CAAnB;AADP,OAAd;AAGH,KATD,EAUCC,KAVD,CAUOC,GAAG,IAAIR,OAAO,CAACC,GAAR,CAAY,iCAAZ,CAVd;AAWH;;AAEDQ,EAAAA,YAAY,CAACH,OAAD,EAAS;AACjBA,IAAAA,OAAO,CAACI,QAAR,GAAmB,IAAIC,IAAJ,EAAnB;AACA,QAAIpB,OAAO,GAAE;AACTqB,MAAAA,MAAM,EAAG,MADA;AAETpB,MAAAA,OAAO,EAAG;AACN,wBAAiB,kBADX;AAEN,kBAAW;AAFL,OAFD;AAOTqB,MAAAA,IAAI,EAAIC,IAAI,CAACC,SAAL,CAAeT,OAAf;AAPC,KAAb;AAaH;;AAEDU,EAAAA,YAAY,CAACV,OAAD,EAAS;AACjB,QAAIW,KAAK,GAAG,KAAK9B,KAAL,CAAWC,YAAX,CAAwB8B,IAAxB,CAA6BC,KAAK,IAAE;AAC5C,aAAOA,KAAK,CAACC,GAAN,KAAcd,OAAO,CAACc,GAA7B;AACH,KAFW,CAAZ;AAIA,QAAIC,WAAW,GAAG,KAAKlC,KAAL,CAAWC,YAAX,CAAwBe,KAAxB,EAAlB;AACAkB,IAAAA,WAAW,CAACC,MAAZ,CAAmBL,KAAnB,EAA0B,CAA1B;AAEA,SAAKb,QAAL,CAAc;AACVhB,MAAAA,YAAY,EAAEiC;AADJ,KAAd;AAGH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAAC,qBAAY,IAAE,IAAf;AAAqB,wBAAe,IAAE;AAAtC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AACI,MAAA,QAAQ,EAAKjB,OAAD,IAAW;AACnB,aAAKG,YAAL,CAAkBH,OAAlB;AACH,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,aAAD;AACI,MAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWC,YADrB;AAEI,MAAA,QAAQ,EAAGkB,OAAD,IAAW,KAAKU,YAAL,CAAkBV,OAAlB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAaH;;AA3E4B;;AA8EjC,eAAevB,GAAf","sourcesContent":["import React from \"react\"\nimport RegisterForm from './RegisterForm'\nimport RegisterTable from './RegisterTable'\nimport API from '../utils/ApiURLBase'\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            student_list:[],\n            id_counter:0\n        }\n    }\n\n    componentDidMount()\n    {\n        let options = {\n\n            headers : {\n                Accept : 'application/json'\n            },\n\n        }\n        fetch(`${API.baseURL}/register/create`,options )\n        .then(res =>{return res.json()})\n        .then(data=>{\n            console.log(data);\n            let butter_list = this.state.student_list.slice();\n          \n            this.setState({\n                student_list :   butter_list.concat([data.student]),\n            });\n        })\n        .catch(err => console.log(\"Ocurrio un error en la conexion\"))\n    }\n\n    handleSubmit(student){\n        student.datetime = new Date();\n        let options ={\n            method : \"POST\",\n            headers : {\n                \"Content-type\" : \"application/json\",\n                \"Accept\" : \"application/json\"\n            },\n\n            body :  JSON.stringify(student)\n        }\n\n\n\n        \n    }\n\n    handleDelete(student){\n        let index = this.state.student_list.find(value=>{\n            return value._id === student._id;\n        })\n\n        let buffer_list = this.state.student_list.slice();\n        buffer_list.splice(index, 1);\n\n        this.setState({\n            student_list: buffer_list\n        });\n    }\n    \n    render(){\n        return (\n            <div className=\"container\" style={{\"marginTop\":2+\"em\", \"marginBottom\":2+\"em\"}}>\n                <RegisterForm \n                    onSubmit = {(student)=>{\n                        this.handleSubmit(student);\n                    }}\n                />\n                <RegisterTable \n                    list={this.state.student_list}\n                    onDelete={(student)=>this.handleDelete(student)}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}